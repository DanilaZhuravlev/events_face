services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
       - "8001:8000"
    command: >
      sh -c "echo 'Waiting for DB volume mount...' && \
             sleep 2 && \
             echo 'Running collectstatic...' && \
             python manage.py collectstatic --noinput && \
             echo 'Running migrations...' && \
             python manage.py migrate --noinput && \
             echo 'Starting Gunicorn...' && \
             gunicorn --worker-class=gevent --workers=4 --bind 0.0.0.0:8000 src.core.wsgi:application"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - db_data:/app/db
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: "src.core.settings"
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      redis:
        condition: service_started

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["celery", "-A", "celery_app", "worker", "-l", "info", "-B"]
    volumes:
      - db_data:/app/db
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: "src.core.settings"
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      redis:
        condition: service_started
      web:
         condition: service_started

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - web

volumes:
  static_volume:
  media_volume:
  db_data:
  redis_data: